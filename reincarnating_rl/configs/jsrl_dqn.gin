# Hyperparameters follow the classic Nature DQN, but we modify as necessary to
# match those used in Rainbow (Hessel et al., 2018), to ensure apples-to-apples
# comparison.
import dopamine.discrete_domains.atari_lib
import dopamine.discrete_domains.run_experiment
import dopamine.jax.agents.dqn.dqn_agent
import dopamine.replay_memory.circular_replay_buffer
import dopamine.replay_memory.prioritized_replay_buffer
import reincarnating_rl.reincarnation_dqn_agent
import reincarnating_rl.jsrl_dqn_agent
import reincarnating_rl.run_experiment

JaxDQNAgent.gamma = 0.99
JaxDQNAgent.update_horizon = 1
JaxDQNAgent.min_replay_history = 20000  # agent steps
JaxDQNAgent.update_period = 4
JaxDQNAgent.target_update_period = 8000  # agent steps (every 100 updates)
JaxDQNAgent.epsilon_train = 0.01
JaxDQNAgent.epsilon_eval = 0.001
JaxDQNAgent.epsilon_decay_period = 50000  # agent steps
JaxDQNAgent.loss_type = 'huber'
JaxDQNAgent.optimizer = 'adam'
create_optimizer.learning_rate = 6.25e-5
create_optimizer.eps = 1.5e-4

ReincarnationDQNAgent.num_updates_per_persistent_step = 1
RunnerWithTeacher.num_pretraining_iterations = 0
RunnerWithTeacher.teacher_steps = 0
JSRLAgent.roll_out_decay_period = 2500000
JSRLAgent.max_roll_in_steps = 100
JSRLAgent.roll_in_guide = False
JSRLAgent.roll_out_guide_prob = 1.0


atari_lib.create_atari_environment.game_name = 'Pong'
# Sticky actions with probability 0.25, as suggested by (Machado et al., 2017).
atari_lib.create_atari_environment.sticky_actions = True
create_runner.schedule = 'continuous_train'
create_agent.agent_name = 'jax_dqn'
create_agent.debug_mode = True
Runner.num_iterations = 20
Runner.training_steps = 125000  # agent steps
Runner.evaluation_steps = 125000  # agent steps
Runner.max_steps_per_episode = 27000  # agent steps

OutOfGraphReplayBuffer.replay_capacity = 1000000
OutOfGraphReplayBuffer.batch_size = 32
